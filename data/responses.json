{
    "err_create_field_DNE": "That field does not exist in this type\n|    ",
    "err_create_field_wrong_type": "That value does not match the type of the field\n|    ",
    "err_create_field_no_value": "Please input a variable and a value\n|    ",
    "err_create_field_already_entered": "This field has already been entered\n|    ",
    "err_assign_empty": "Please input a type name and id\n|> ",
    "err_assign_no_id": "Please input an id for this instance\n|> ",
    "err_assign_DNE": "That type does not exist\n|> ",
    "err_defn_needs_type_name": "Please enter a type name for the definition\n|> ",
    "err_defn_needs_ID_name": "Please enter a name for the ID of this type\n|> ",
    "err_defn_already_exists": "\n Type already defined\n|> ",
    "err_defn_no_name": "Please enter a name for this field\n|    ",
    "err_defn_invalid_type": "Not a recognized type\n|    ",
    "err_unknown_command": "Unknown command. Type help for a list of commands\n|> ",
    "err_at_empty": "Please enter what the type and id of which to get an instance\n|> ",
    "err_at_no_id": "Please enter an id of the instance you which to get\n|> ",
    "err_at_column_not_int": "Column number should be an int\n|> ",
    "err_at_invalid_type": "No type of that name\n|> ",
    "err_at_column_out_of_range": "Column out of range. Hint: Index starts at 0\n|> ",
    "err_at_id_DNE": "That ID does not exist\n|> ",
    "unbound_type": "<unbound type>\n|> ",
    "unbound_val": "<unbound val>\n|> ",
    "no_entry": "No entry\n|> ",
    "err_find_missing_type": "Must specify type in find\n|> ",
    "err_find_invalid_expr": "Invalid comparison expression\n|> ",
    "err_find_invalid_comparison": "Invalid comparison, use <> = > < >= <=\n|> ",
    "err_find_invalid_type": "Cannot find type of that name\n|> ",
    "err_find_wrong_type": "Wrong type in find expression\n|> ",
    "err_find_var_DNE": "A variable in the expression does not exist\n|> ",
    "help_message": "\nTo define a custom dataframe, type the following,\nall valueNames must be unique:\ndef TypeName IdName\n   type valueName\n   ...\n   type valueName\n\n\nTo assign values to the custom types:\nassign TypeName IdValue\n   valueName = value\n   ...\n   valueName = value\n\nTo save to a file, use 'save <file>'\n\nTo find a file, type 'find TypeName expr'\n'expr' must be of the form: 'variable compare value' separated by spaces.\nValid compare opperators include <> = > < <= and >=\nexpr can be chained using 'and'\n\n|> ",
    "indent_end": "|    <|\n|> ",
    "indent": "|    ",
    "default": "|> ",
    "welcome": "\n\nWelcome to the 3110 Database Command Line\nPlease describe the data you want to store.\nType 'quit' to quit, 'help' for help.\n\n"
}